<?php
/**
 * Implementation of hook_ctools_plugin_directory().
 */
function site_alert_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && ($plugin_type == 'content_types')) {
    return 'plugins/' . $plugin_type;
  }
}

/**
 * Implement hook_ctools_plugin_api().
 *
 * Tells panels, that we have a mini-panel available.
 */
function site_alert_ctools_plugin_api($module, $api) {

  if ($module == 'panels_mini' && $api == 'panels_default') {
    return array('version' => 1);
  }
}

/**
 * Build the administration form which collects the following and store the values in the vars table:
 *
 * @toggle - whether or not an alert is active
 * @severity - Severity of the alert (low or high)
 * @title - The title of the Alert (usualy "Alert")
 * @content - Content to display on the homepage
 * @node - The associated Alert Node. The Read More link on the homepage will link to this node
 *
 */
function site_alert_admin() {
  $form = array();

  $form['alerts_description'] = array (
    '#value' => '<p>Use this page to set an Alert. If the "Turn On Alert" checkbox is checked, a blue or red banner (depending on the Alert Severity) will be displayed on the homepage containing the copy defined here.',
  );

  $date = time();
  $format = 'm-d-Y h:iA';

  $form['alerts_start'] = array(
    '#prefix' => '<div class="site-alert-date-info">' . t('Dates are stored in the site\'s default timezone, currently %tz', array('%tz' => variable_get('date_default_timezone'))) . '</div>',
    '#type' => 'date_popup',
    '#title' => t('Start date for Alert (Default is now)'),
    '#date_format' => $format,
    '#date_label_position' => 'within',
    '#date_increment' => 15,
    '#date_year_range' => '-1:+1',
    '#default_value' => variable_get('alerts_start', $date),
    '#date_timezone' => variable_get('date_default_timezone', 0),
  );

  $form['alerts_expire'] = array(
    '#type' => 'date_popup',
    '#title' => t('Expiration date for Alert'),
    '#date_format' => $format,
    '#date_label_position' => 'within',
    '#date_increment' => 15,
    '#date_year_range' => '-1:+1',
    '#default_value' => variable_get('alerts_expire', $date),
    '#date_timezone' => variable_get('date_default_timezone', 0),
    '#required' => TRUE,
  );

  $form['alerts_severity'] = array (
    '#type' => 'select',
    '#title' => 'Severity',
    '#options' => array (
      'low' => 'Low Severity - Yellow',
      'high' => 'High Severity - Red',
      ),
    '#default_value' => variable_get('alerts_severity', 'low'),
    '#required' => TRUE,
  );

  $alert = variable_get('alerts_content');

  $form['alerts_content'] = array (
    '#type' => 'textarea',
    '#description' => t('Allowed tags are a, strong, and em'),
    '#title' => 'Content',
    '#default_value' => $alert,
    '#required' => TRUE,
    '#rows' => 2,
  );

  return system_settings_form($form, FALSE);
}

/**
 * Create the page for and link to the form
 */
function site_alert_menu() {

  $items = array();

  $items['admin/settings/alerts'] = array(
    'title' => 'Site Alert Settings',
    'description' => 'Toggle alerts on/off and configure the title and contents',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('site_alert_admin'),
    'access arguments' => array('administer alerts settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['ajax/site_alert'] = array(
    'title' => 'Site Alert',
    'page callback' => 'site_alert_get_alert',
    'type' => MENU_CALLBACK,
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Create a new perm to administer Site Alerts
 *
 * This permission can be given to any role
 */
function site_alert_permission() {

  return array(
    'administer alerts settings' => array(
    'title' => t('Administer alerts settings'),
    'description' => t('Allow users to administer alerts settings'),
    ),
  );
}

/**
 * Callback to get site alert information.
 */
function site_alert_get_alert() {
  $start = variable_get('alerts_start');
  $begin = strtotime($start);
  $alert = variable_get('alerts_expire');
  $expire = strtotime($alert);

  $level = variable_get('alerts_severity');
  $alert = variable_get('alerts_content');

  if ($begin < time()) {
    if ($expire > time()) {
      $output = '<div class=' .$level .'>';
      $output .= '<div class=text>';

      $tags = array('a', 'br', 'em', 'strong');
      $output .= filter_xss($alert, $tags);
      $output .= '</div></div>';

      print $output;
      drupal_page_footer();
      exit;
    }
  }
}
