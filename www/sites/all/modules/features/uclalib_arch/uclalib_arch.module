<?php
/**
 * @file
 * Code for the UCLALIB Architecture feature.
 */

include_once 'uclalib_arch.features.inc';

/**
 * Implements hook_flush_caches().
 */
function uclalib_arch_flush_caches() {
  if (module_exists('bean')) {
    // Ensure permissions to view all bean types are enabled for anonymous
    // and authenticated users.

    $rids = array(
      DRUPAL_ANONYMOUS_RID,
      DRUPAL_AUTHENTICATED_RID,
    );


    // Permission for each entity type.
    bean_reset(TRUE);
    $perms = array();
    foreach (bean_get_types() as $bean_type) {
      $bean_type_name = check_plain($bean_type->type);
      $perms[] = "view any $bean_type_name bean";
    }

    foreach ($rids as $rid) {
      user_role_grant_permissions($rid, $perms);
    }
  }
}

/**
 * Implements hook_date_formats().
 */
function uclalib_arch_date_formats() {
  return array(
    array(
      'type' => 'month',
      'format' => 'M',
      'locales' => array(),
    ),
    array(
      'type' => 'day',
      'format' => 'j',
      'locales' => array(),
    ),
    array(
      'type' => 'time',
      'format' => 'g:ia',
      'locales' => array(),
    ),
    array(
      'type' => 'year',
      'format' => 'Y',
      'locales' => array(),
    ),
    array(
      'type' => 'uclalib_event_date_time',
      'format' => 'l, M d, Y - g:ia',
      'locales' => array(),
    ),
  );
}

/**
 * Implements hook_date_format_types().
 */
function uclalib_arch_date_format_types() {
  return array(
    'month_with_date' => t('Month with date'),
    'month' => t('Month'),
    'day' => t('Day'),
    'time' => t('Time'),
    'year' => t('Year'),
    'uclalib_event_date_time' => t('UCLALIB event date/time'),
  );
}

/**
 * Implements hook_icon_bundles().
 *
 * Define UCLALIB custom icon set.
 */
function uclalib_arch_icon_bundles() {
  $bundles = array();
  $bundles['uclalib'] = array(
    'icons' => array (
      'todo' => 'todo',
      'start' => 'start',
      'search' => 'search',
      'printer' => 'printer',
      'printer-color' => 'printer-color',
      'news' => 'news',
      'more' => 'more',
      'hours' => 'hours',
      'help' => 'help',
      'copy' => 'copy',
      'copy-color' => 'copy-color',
      'cash' => 'cash',
      'arrow-right' => 'arrow-right',
      'home' => 'home',
      'email' => 'email',
      'telephone' => 'telephone',
      'specialist' => 'specialist',
      'calendar' => 'calendar',
      'address' => 'address',
      'web' => 'web',
      'misc' => 'misc',
      'printer-ucla-only' => 'printer-ucla-only',
      'cafe' => 'cafe',
      'collaboration-pod' => 'collaboration-pod',
      'collaborative-study' => 'collaborative-study',
      'conference-room' => 'conference-room',
      'inquiry-assistance' => 'inquiry-assistance',
      'lounge' => 'lounge',
      'media-room' => 'media-room',
      'presentation-space' => 'presentation-space',
      'classroom' => 'classroom',
      'technology-help' => 'technology-help',
      'scanner' => 'scanner',
      'reading-room' => 'reading-room',
      'circulation-desk' => 'circulation-desk',
      'self-checkout' => 'self-checkout',
      'pdf-sender' => 'pdf-sender',
      'bruin-card-machine' => 'bruin-card-machine',
      'hours' => 'hours',
      'ada-compliant' => 'ada-compliant',
      'laptop' => 'laptop',
      'monitor' => 'monitor',
      'computer-ucla-only' => 'computer-ucla-only',
      'computer' => 'computer',
      'projector' => 'projector',
      'study-room' => 'study-room',
      'laptop-ucla-only' => 'laptop-ucla-only',
      'clicc-computer' => 'clicc-computer',
      'quiet-area' => 'quiet-area',
      'laptop-ucla-only2' => 'laptop-ucla-only2',
      'quiet-area-2' => 'quiet-area-2',
      'copy-color' => 'copy-color',
      'hours2' => 'hours2',
      'mappin' => 'mappin',
      'give-now' => 'give-now',
    ),
    'name' => 'uclalib',
    'provider' => 'icomoon',
    'settings' => array (
      'ie7' => 0,
      'tag' => 'span',
      'prefix' => 'icon-',
      'metadata' => array (
        'fontFamily' => 'icomoon',
      ),
      'showGlyphs' => true,
      'metrics' => array (
        'emSize' => 512,
        'baseline' => 6.25,
        'whitespace' => 50,
      ),
      'resetPoint' => 58880,
      'showQuickUse' => true,
      'quickUsageToken' => false,
      'showMetrics' => true,
      'showMetadata' => false,
    ),
    'status' => 1,
    'title' => 'UCLALIB Icons',
    'version' => '',
    '#attached' => array (
      'icomoon_process_attached' => array (
        0 => array (
          0 => 'uclalib',
        ),
      ),
    ),
    'path' => 'sites/all/themes/uclalib_omega/icons',
    'render' => 'sprite',
    'import' => true,
    'database' => true,
  );

  return $bundles;
}

/**
 * Implements hook_form_ID_alter().
 */
function uclalib_arch_form_bean_form_alter(&$form, &$form_state, $form_id) {

  // Simplify the log message field.
  if (isset($form['revision'])) {
    $form['revision']['log']['#type'] = 'textfield';
    $form['revision']['log']['#size'] = 100;
    $form['revision']['log']['#title'] = t('What did you change?');
  }

  // Space is cheap; default to new revision and require a log message.
  $bean_types_that_require_revisions = array(
    'featured_content',
    'link_list',
    'living_library_gallery',
    'news_and_events_bean',
    'quick_find',
    'showcase',
    'text_block',
    'upcoming_events',
  );
  if (in_array($form['#bundle'], $bean_types_that_require_revisions)) {
    if (isset($form['revision'])) {
      // Default to new revision.
      $form['revision']['is_new_revision']['#default_value'] = true;
      $form['revision']['is_new_revision']['#type'] = 'hidden';

      // This dependency is not needed when the is_new_revision field is hidden.
      unset($form['revision']['log']['#dependency']);

      // Always make the current edit the live version.
      $form['revision']['default_revision']['#default_value'] = true;
      $form['revision']['default_revision']['#type'] = 'hidden';

      // Require a log message.
      $form['revision']['log']['#required'] = TRUE;
    }
  }

  // Hide the view mode selector if there is only one to choose from.
  // This really should be built into the Bean module itself. ;)
  // Avoid undefined index errors which happen for non-administrators...
  // .. view_mode['#options'] is (always?) not present for non-admins, don't know why.
  if (isset($form['view_mode']['#options']) && count($form['view_mode']['#options']) == 1) {
    $form['view_mode']['#type'] = 'hidden';
  }

  // In fact, most beans don't use "View modes" at all so remove it
  // entirely from the edit form for the following bean types.
  $bean_types_that_dont_need_view_modes = array(
    'featured_content',
    'libguides_api_v1',
    'link_list',
    'living_library_gallery',
    'news_and_events_bean',
    'quick_find',
    'showcase',
    'text_block',
    'upcoming_events',
  );
  if (in_array($form['#bundle'], $bean_types_that_dont_need_view_modes)) {
    if (isset($form['view_mode'])) {
      $form['view_mode']['#type'] = 'hidden';
    }
  }
}
